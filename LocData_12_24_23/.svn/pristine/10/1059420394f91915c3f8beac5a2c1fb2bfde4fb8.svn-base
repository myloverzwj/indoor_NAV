package com.modou.loc.module.map2.config;

import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;

import com.modou.loc.module.map2.Point;

import android.util.Log;
import android.util.Xml;

/**
 * @author 作者 E-mail: xyylchq@163.com
 * @version 创建时间: 2014-8-2 下午9:46:04
 * 类说明:
 * 地图文件xml解析类
 */
public class MapParser {
	
	private final String TAG = "mylog";
	
	public void parseMapFile(InputStream is) throws XmlPullParserException, IOException {
		
		Floor floorItem = null;
		List<Cell> cellList = new ArrayList<Cell>();
		Cell cellItem = null;
		List<Point> pointList = null;
		Point pointItem = null;
		
		XmlPullParser parser = Xml.newPullParser();
		parser.setInput(is, "UTF-8");
		int eventType = parser.getEventType();
		while (eventType != XmlPullParser.END_DOCUMENT) {
			switch (eventType) {
			case XmlPullParser.START_DOCUMENT:
				break;
			case XmlPullParser.START_TAG:
				if (parser.getName().equals("BuildingName")) {
					eventType = parser.next();
					
					String buildName = parser.getText();
					MapConfig.getInstance().setBuildName(buildName);
//					Log.d(TAG, "buildingName====" + buildName);
				} else if (parser.getName().equals("Note")) {
					eventType = parser.next();
					
					String note = parser.getText();
					MapConfig.getInstance().setNote(note);
//					Log.d(TAG, "note===========" + note);
				} else if (parser.getName().equals("FloorCount")) {
					eventType = parser.next();
					
//					Log.d(TAG, "floorCount========" + parser.getText());
					int floorCount = Integer.parseInt(parser.getText());
					MapConfig.getInstance().setFloorCount(floorCount);
					
				} else if (parser.getName().equals("ThisFloor")) {
					eventType = parser.next();
					
					int floorIndex = Integer.parseInt(parser.getText());
					floorItem = new Floor();
					floorItem.setFloorId(floorIndex);
					MapConfig.getInstance().addFloor(floorIndex, floorItem);
					
				} else if (parser.getName().equals("Scale")) {
					eventType = parser.next();
					
//					Log.d(TAG, "scalue=========" + parser.getText());
					double scale = Double.parseDouble(parser.getText());
					MapConfig.getInstance().setScale(scale);
					
				} else if (parser.getName().equals("Cell")) {
					cellItem = new Cell();
					
				} else if (parser.getName().equals("Name")) {
					eventType = parser.next();
					
					String name = parser.getText();
					cellItem.setName(name);
//					Log.d(TAG, "name==========" + name);
					
				} else if (parser.getName().equals("Type")) {
					eventType = parser.next();
					
					String type = parser.getText();
					cellItem.setType(type);
//					Log.d(TAG, "type==============" + type);
					
				} else if (parser.getName().equals("Shape")) {
					eventType = parser.next();
					
					String shape = parser.getText();
					cellItem.setShape(shape);
//					Log.d(TAG, "shape========" + shape);
				} else if (parser.getName().equals("Points")) {
					pointList = new ArrayList<Point>();
					
				} else if (parser.getName().equals("Point")) {
					pointItem = new Point();
					
				} else if (parser.getName().equals("X")) {
					eventType = parser.next();
					
					float x = Float.parseFloat(parser.getText());
					x = CoordUtil.toGLX(x);
					pointItem.setX(x);
//					Log.d(TAG, "x===========" + x);
				} else if (parser.getName().equals("Y")) {
					eventType = parser.next();
					
					float y = Float.parseFloat(parser.getText());
					y = CoordUtil.toGLY(y);
					pointItem.setY(y);
//					Log.d(TAG, "y===========" + y);
					
				} else if (parser.getName().equals("Connections")) {
					//TODO 引用还没有解析
				}
					
				break;
			case XmlPullParser.END_TAG:
				if (parser.getName().equals("ThisFloor")) {
					//TODO 直接放到ThisFloor中的Start节点进行处理
				} else if (parser.getName().equals("Points")) {
					cellItem.setPoints(pointList);
					pointList = null;
				} else if (parser.getName().equals("Point")) {
					pointList.add(pointItem);
					pointItem = null;
				} else if (parser.getName().equals("Cell")) {
					cellList.add(cellItem);
					cellItem = null;
				} else if (parser.getName().equals("Cells")) {
					floorItem.setCellList(cellList);
					cellList = null;
				}
				break;
			}
			eventType = parser.next();
		}
		
	}

}
